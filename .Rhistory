autoplot() +
facet_wrap(. ~ Symbol, scales="free", ncol=1)
gafa_stock_2 %>%
autoplot() +
facet_wrap(. ~ Symbol, scales="free", ncol=4)
gafa_stock_2 %>%
autoplot() +
facet_wrap(. ~ Symbol, scales="free", ncol=2)
gafa_stock_2 %>%
autoplot() +
facet_wrap(. ~ Symbol, scales="free", ncol=2) +
theme(legend.position = "none")
gafa_stock_2 %>%
autoplot() +
facet_wrap(. ~ Symbol, scales="free", ncol=2) +
theme(legend.position = "none") +
scale_y_continuous(labels = dollar_format())
gafa_stock %>%
filter(year(Date) >= 2018) %>%
group_by(Symbol) %>%
arrange(Date) %>%
mutate(trading_day = row_number()) %>%
ungroup() %>%
glimpse()
gafa_stock_2 <- gafa_stock %>%
filter(year(Date) >= 2018) %>%
group_by(Symbol) %>%
arrange(Date) %>%
mutate(trading_day = row_number()) %>%
ungroup() %>%
update_tsibble(index=trading_day, value=Close, regular = T)
?update_tsibble
gafa_stock_2 <- gafa_stock %>%
filter(year(Date) >= 2018) %>%
group_by(Symbol) %>%
arrange(Date) %>%
mutate(trading_day = row_number()) %>%
ungroup() %>%
update_tsibble(index=trading_day, regular = T)
gafa_stock_2 %>%
autoplot(Close) +
facet_wrap(. ~ Symbol, scales="free", ncol=2) +
theme(legend.position = "none") +
scale_y_continuous(labels = dollar_format())
gafa_stock_2 %>%
autoplot(Close) +
facet_wrap(. ~ Symbol, scales="free", ncol=2) +
theme(legend.position = "none") +
scale_y_continuous(labels = dollar_format()) +
base_plot_theme() +
labs(title="2018 Stock Close Price Trend: Apple, Amazon, Facebook, Google",
x="Trading Day",
y="Stock\nClose\nPrice")
base_plot_theme <- function(...) {
theme_tufte() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1),
axis.text = element_text(face="bold"),
axis.title.y = element_text(angle = 0, vjust = 0.5),
axis.ticks = element_blank())
}
gafa_stock_2 %>%
autoplot(Close) +
facet_wrap(. ~ Symbol, scales="free", ncol=2) +
theme(legend.position = "none") +
scale_y_continuous(labels = dollar_format()) +
base_plot_theme(legend.position="none") +
labs(title="2018 Stock Close Price Trend: Apple, Amazon, Facebook, Google",
x="Trading Day",
y="Stock\nClose\nPrice")
gafa_stock_2 %>%
autoplot(Close) +
facet_wrap(. ~ Symbol, scales="free", ncol=2) +
theme(legend.position = "none") +
scale_y_continuous(labels = dollar_format()) +
base_plot_theme() +
theme(legend.position = "none")
labs(title="2018 Stock Close Price Trend: Apple, Amazon, Facebook, Google",
x="Trading Day",
y="Stock\nClose\nPrice")
base_plot_theme <- function() {
theme_tufte() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1),
axis.text = element_text(face="bold"),
axis.title.y = element_text(angle = 0, vjust = 0.5),
axis.ticks = element_blank())
}
gafa_stock_2 %>%
autoplot(Close) +
facet_wrap(. ~ Symbol, scales="free", ncol=2) +
theme(legend.position = "none") +
scale_y_continuous(labels = dollar_format()) +
base_plot_theme() +
theme(legend.position = "none",
strip.text = element_text(size=14)) +
labs(title="2018 Stock Close Price Trend: Apple, Amazon, Facebook, Google",
x="Trading Day",
y="Stock\nClose\nPrice")
gafa_stock_2 %>%
autoplot(Close) +
facet_wrap(. ~ Symbol, scales="free", ncol=2) +
theme(legend.position = "none") +
scale_y_continuous(labels = dollar_format()) +
base_plot_theme() +
theme(legend.position = "none",
strip.text = element_text(size=12)) +
labs(title="2018 Stock Close Price Trend: Apple, Amazon, Facebook, Google",
x="Trading Day",
y="Stock\nClose\nPrice")
gafa_stock_2 %>%
autoplot(Close) +
facet_wrap(. ~ Symbol, scales="free", ncol=2) +
theme(legend.position = "none") +
scale_y_continuous(labels = dollar_format()) +
base_plot_theme() +
theme(legend.position = "none",
strip.text = element_text(size=12)) +
labs(title="2018 Stock Close Price Trend",
subtitle = "Apple, Amazon, Facebook, Google",
x="Trading Day",
y="Stock\nClose\nPrice")
state_stats %>%
inner_join(state_to_region, by = c("abbr" = "state_abb")) %>%
ggplot(aes(y=med_income, x=pop2010)) +
geom_point(aes(size=pop2010), alpha=0.5)
state_stats
state_stats %>%
inner_join(state_to_region, by = c("abbr" = "state_abb")) %>%
ggplot(aes(y=med_income, x=homeownership)) +
geom_point(aes(size=homeownership), alpha=0.5)
state_stats %>%
inner_join(state_to_region, by = c("abbr" = "state_abb")) %>%
ggplot(aes(y=homeownership, x=pop2010)) +
geom_point(aes(size=pop2010), alpha=0.5)
10^5
state_stats %>%
inner_join(state_to_region, by = c("abbr" = "state_abb")) %>%
mutate(pop2010_mil = pop2010/10^6)
ggplot(aes(y=homeownership, x=pop2010_mil)) +
geom_point(aes(size=pop2010_mil), alpha=0.5)
state_stats %>%
inner_join(state_to_region, by = c("abbr" = "state_abb")) %>%
mutate(pop2010_mil = pop2010/10^6) %>%
ggplot(aes(y=homeownership, x=pop2010_mil)) +
geom_point(aes(size=pop2010_mil), alpha=0.5)
?state_stats
state_stats %>%
inner_join(state_to_region, by = c("abbr" = "state_abb")) %>%
mutate(pop2010_mil = pop2010/10^6) %>%
ggplot(aes(y=homeownership/100, x=pop2010_mil)) +
geom_point(aes(size=pop2010_mil), alpha=0.5)
midwest %>%
ggplot(aes(percwhite, percbelowpoverty)) +
geom_point(aes(size = poptotal/1e6)) +
scale_size_area("Pop (millions)", breaks=c(0.5, 1, 2, 4)) +
geom_smooth(aes(weight=poptotal), method = "lm", size=1, color="red", se=F) +
geom_smooth(method = "lm", size=1, color="blue", se=F) +
facet_wrap(. ~ state)
state_stats %>%
inner_join(state_to_region, by = c("abbr" = "state_abb")) %>%
mutate(pop2010_mil = pop2010/10^6) %>%
ggplot(aes(y=homeownership/100, x=pop2010_mil)) +
geom_point(aes(size=pop2010_mil), alpha=0.5) +
scale_size_area("Population (millions)", breaks=c(1, 5, 10, 20, 40))
state_stats %>%
inner_join(state_to_region, by = c("abbr" = "state_abb")) %>%
mutate(pop2010_mil = pop2010/10^6) %>%
ggplot(aes(y=homeownership/100, x=pop2010_mil)) +
geom_point(aes(size=pop2010_mil), alpha=0.5) +
scale_size_area("Population (millions)", breaks=c(1, 5, 10, 20, 30))
state_stats %>%
inner_join(state_to_region, by = c("abbr" = "state_abb")) %>%
mutate(pop2010_mil = pop2010/10^6) %>%
ggplot(aes(y=homeownership/100, x=multiunit)) +
geom_point(aes(size=pop2010_mil), alpha=0.5) +
scale_size_area("Population (millions)", breaks=c(1, 5, 10, 20, 30))
state_stats %>%
inner_join(state_to_region, by = c("abbr" = "state_abb")) %>%
mutate(pop2010_mil = pop2010/10^6) %>%
ggplot(aes(y=homeownership/100, x=med_income)) +
geom_point(aes(size=pop2010_mil), alpha=0.5) +
scale_size_area("Population (millions)", breaks=c(1, 5, 10, 20, 30))
state_stats %>%
inner_join(state_to_region, by = c("abbr" = "state_abb")) %>%
mutate(pop2010_mil = pop2010/10^6) %>%
ggplot(aes(y=homeownership/100, x=Poverty rate)) +
state_stats %>%
inner_join(state_to_region, by = c("abbr" = "state_abb")) %>%
mutate(pop2010_mil = pop2010/10^6) %>%
ggplot(aes(y=homeownership/100, x=poverty)) +
geom_point(aes(size=pop2010_mil), alpha=0.5) +
scale_size_area("Population (millions)", breaks=c(1, 5, 10, 20, 30))
state_stats %>%
inner_join(state_to_region, by = c("abbr" = "state_abb")) %>%
mutate(pop2010_mil = pop2010/10^6) %>%
ggplot(aes(y=homeownership/100, x=land_area)) +
geom_point(aes(size=pop2010_mil), alpha=0.5) +
scale_size_area("Population (millions)", breaks=c(1, 5, 10, 20, 30))
state_stats %>%
inner_join(state_to_region, by = c("abbr" = "state_abb")) %>%
mutate(pop2010_mil = pop2010/10^6) %>%
ggplot(aes(y=homeownership/100, x=pop2010_mil)) +
geom_point(aes(size=med_income), alpha=0.5)
state_stats %>%
inner_join(state_to_region, by = c("abbr" = "state_abb")) %>%
mutate(pop2010_mil = pop2010/10^6) %>%
ggplot(aes(y=med_income, x=homeownership/100)) +
geom_point(aes(size=pop2010_mil), alpha=0.5) +
scale_size_area("Population (millions)", breaks=c(1, 5, 10, 20, 30))
state_stats %>%
inner_join(state_to_region, by = c("abbr" = "state_abb")) %>%
mutate(pop2010_mil = pop2010/10^6) %>%
ggplot(aes(y=med_income, x=fed_spend)) +
geom_point(aes(size=pop2010_mil), alpha=0.5) +
scale_size_area("Population (millions)", breaks=c(1, 5, 10, 20, 30))
set.seed(1)
y <- sin(seq(1, 2*pi, length.out = 100))
x <- 1:100
plotdata <- data.frame(x=x, y=y, lower = (y+runif(100, -1, -0.5)), upper = (y+runif(100, 0.5, 1)))
ggplot(plotdata) + geom_line(aes(y=y, x=x, colour = "sin"))+
geom_ribbon(aes(ymin=lower, ymax=upper, x=x, fill = "band"), alpha = 0.3)+
scale_colour_manual("",values="blue")+
scale_fill_manual("",values="grey12")
ggplot(mpg, aes(displ, 1 / hwy)) +
geom_point() +
geom_quantile(colour = "red", size = 2, alpha = 0.5, quantiles=c(0.10, .25, .5, .75, .9)) +
geom_smooth(method = "lm", se=F)
ggplot(mtcars, aes(wt, mpg)) +
geom_point() +
geom_rug()
ggplot(mpg, aes(trans, cty)) +
geom_point() +
stat_summary(aes(color="mean"), geom="point", fun="mean", size=4) +
stat_summary(aes(color="median"), geom="point", fun="median", size=4) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
labs(color="Summary Metric")
ggplot(diamonds, aes(price, color=cut)) +
geom_freqpoly(aes(y=..density..), binwidth=500)
df1 %>%
ggplot(aes(x,y)) +
geom_point(size=4, color="grey40", show.legend = T) +
geom_point(aes(color=factor(x)), size=2)
df <- data.frame(
x = rnorm(120, c(0, 2, 4)),
y = rnorm(120, c(1, 2, 1)),
z = letters[1:3]
)
df2 <- select(df, -z)
ggplot(df, aes(x, y)) +
geom_point(data=select(df, -z), color="grey70", alpha=0.45) +
geom_point(aes(color=z)) +
facet_wrap(~z)
txhousing %>%
ggplot(aes(date, sales)) +
geom_line(aes(group=city), alpha=1/2)
txhousing %>%
ggplot(aes(date, log(sales))) +
geom_line(aes(group=city), alpha=1/2)
state_stats %>%
inner_join(state_to_region, by = c("abbr" = "state_abb")) %>%
mutate(pop2010_mil = pop2010/10^6) %>%
ggplot(aes(y=med_income, x=soc_sec)) +
geom_point(aes(size=pop2010_mil), alpha=0.5) +
scale_size_area("Population (millions)", breaks=c(1, 5, 10, 20, 30))
state_stats %>%
inner_join(state_to_region, by = c("abbr" = "state_abb")) %>%
mutate(pop2010_mil = pop2010/10^6) %>%
ggplot(aes(y=med_income, x=soc_sec)) +
geom_point(aes(size=pop2010_mil), alpha=0.5, fill="dodgerblue", color=NA) +
geom_text(aes(label=abb), overlap=F) +
scale_size_area("Population (millions)", breaks=c(1, 5, 10, 20, 30))
state_stats %>%
inner_join(state_to_region, by = c("abbr" = "state_abb")) %>%
mutate(pop2010_mil = pop2010/10^6) %>%
ggplot(aes(y=med_income, x=soc_sec)) +
geom_point(aes(size=pop2010_mil), alpha=0.5, fill="dodgerblue", color=NA) +
geom_text(aes(label=abbr), overlap=F) +
scale_size_area("Population (millions)", breaks=c(1, 5, 10, 20, 30))
state_stats %>%
inner_join(state_to_region, by = c("abbr" = "state_abb")) %>%
mutate(pop2010_mil = pop2010/10^6) %>%
ggplot(aes(y=med_income, x=soc_sec)) +
geom_point(aes(size=pop2010_mil), alpha=0.5, fill="dodgerblue") +
geom_text(aes(label=abbr), overlap=F) +
scale_size_area("Population (millions)", breaks=c(1, 5, 10, 20, 30))
?geom_text
state_stats %>%
inner_join(state_to_region, by = c("abbr" = "state_abb")) %>%
mutate(pop2010_mil = pop2010/10^6) %>%
ggplot(aes(y=med_income, x=soc_sec)) +
geom_point(aes(size=pop2010_mil), alpha=0.5, color="dodgerblue") +
geom_text(aes(label=abbr), check_overlap=T) +
scale_size_area("Population (millions)", breaks=c(1, 5, 10, 20, 30))
state_stats %>%
inner_join(state_to_region, by = c("abbr" = "state_abb")) %>%
mutate(pop2010_mil = pop2010/10^6) %>%
ggplot(aes(y=med_income, x=soc_sec)) +
geom_point(aes(size=pop2010_mil), alpha=0.5, color="dodgerblue") +
geom_text(aes(label=abbr), check_overlap=T, size=4, vjust=-1.5) +
scale_size_area("Population (millions)", breaks=c(1, 5, 10, 20, 30))
state_stats %>%
inner_join(state_to_region, by = c("abbr" = "state_abb")) %>%
mutate(pop2010_mil = pop2010/10^6) %>%
ggplot(aes(y=med_income, x=soc_sec)) +
geom_text(aes(label=abbr), check_overlap=T, size=2) +
geom_point(aes(size=pop2010_mil), alpha=0.5, color="dodgerblue") +
scale_size_area("Population (millions)", breaks=c(1, 5, 10, 20, 30))
state_stats %>%
inner_join(state_to_region, by = c("abbr" = "state_abb")) %>%
mutate(pop2010_mil = pop2010/10^6) %>%
ggplot(aes(y=med_income, x=soc_sec)) +
geom_text_repel(aes(label=abbr), check_overlap=T, size=2) +
geom_point(aes(size=pop2010_mil), alpha=0.5, color="dodgerblue") +
scale_size_area("Population (millions)", breaks=c(1, 5, 10, 20, 30))
state_stats %>%
inner_join(state_to_region, by = c("abbr" = "state_abb")) %>%
mutate(pop2010_mil = pop2010/10^6) %>%
ggplot(aes(y=med_income, x=soc_sec)) +
geom_text(aes(label=abbr), check_overlap=T, size=2) +
geom_point(aes(size=pop2010_mil), alpha=0.5, color="dodgerblue") +
scale_size_area("Population (millions)", breaks=c(1, 5, 10, 20, 30))
?state_stats
?state_stats %>%
inner_join(state_to_region, by = c("abbr" = "state_abb")) %>%
mutate(pop2010_mil = pop2010/10^6) %>%
ggplot(aes(y=med_income, x=soc_sec/100)) +
geom_text(aes(label=abbr), check_overlap=T, size=2) +
geom_point(aes(size=pop2010_mil), alpha=0.5, color="dodgerblue") +
scale_size_area("Population (millions)", breaks=c(1, 5, 10, 20, 30)) +
labs(title = "",
caption = "Some overlapping state abbreviations not shown")
state_stats %>%
inner_join(state_to_region, by = c("abbr" = "state_abb")) %>%
mutate(pop2010_mil = pop2010/10^6) %>%
ggplot(aes(y=med_income, x=soc_sec/100)) +
geom_text(aes(label=abbr), check_overlap=T, size=2) +
geom_point(aes(size=pop2010_mil), alpha=0.5, color="dodgerblue") +
scale_size_area("Population (millions)", breaks=c(1, 5, 10, 20, 30)) +
labs(title = "",
caption = "Some overlapping state abbreviations not shown")
state_stats %>%
inner_join(state_to_region, by = c("abbr" = "state_abb")) %>%
mutate(pop2010_mil = pop2010/10^6) %>%
ggplot(aes(y=med_income, x=soc_sec/100)) +
geom_text(aes(label=abbr), check_overlap=T, size=2) +
geom_point(aes(size=pop2010_mil), alpha=0.5, color="dodgerblue") +
scale_y_continuous(labels = dollar_format(), breaks=seq(0,80000,5000)) +
scale_y_continuous(labels = scales::percent_format(accuracy=1),
breaks = seq(0,1,.05)) +
scale_size_area("Population (millions)", breaks=c(1, 5, 10, 20, 30)) +
labs(title = "",
caption = "n\Some overlapping state abbreviations not shown")
state_stats %>%
inner_join(state_to_region, by = c("abbr" = "state_abb")) %>%
mutate(pop2010_mil = pop2010/10^6) %>%
ggplot(aes(y=med_income, x=soc_sec/100)) +
geom_text(aes(label=abbr), check_overlap=T, size=2) +
geom_point(aes(size=pop2010_mil), alpha=0.5, color="dodgerblue") +
scale_y_continuous(labels = dollar_format(), breaks=seq(0,80000,5000)) +
scale_y_continuous(labels = scales::percent_format(accuracy=1),
breaks = seq(0,1,.05)) +
scale_size_area("Population (millions)", breaks=c(1, 5, 10, 20, 30)) +
labs(title = "",
caption = "n\Some overlapping state abbreviations not shown")
state_stats %>%
inner_join(state_to_region, by = c("abbr" = "state_abb")) %>%
mutate(pop2010_mil = pop2010/10^6) %>%
ggplot(aes(y=med_income, x=soc_sec/100)) +
geom_text(aes(label=abbr), check_overlap=T, size=2) +
geom_point(aes(size=pop2010_mil), alpha=0.5, color="dodgerblue") +
scale_y_continuous(labels = dollar_format(), breaks=seq(0,80000,5000)) +
scale_y_continuous(labels = scales::percent_format(accuracy=1),
breaks = seq(0,1,.05)) +
scale_size_area("Population (millions)", breaks=c(1, 5, 10, 20, 30)) +
labs(title = "",
caption = "\nSome overlapping state abbreviations not shown")
state_stats %>%
inner_join(state_to_region, by = c("abbr" = "state_abb")) %>%
mutate(pop2010_mil = pop2010/10^6,
soc_sec_2 = soc_sec/100) %>%
ggplot(aes(y=med_income, x=soc_sec_2)) +
geom_text(aes(label=abbr), check_overlap=T, size=2) +
geom_point(aes(size=pop2010_mil), alpha=0.5, color="dodgerblue") +
scale_y_continuous(labels = dollar_format()) +
scale_y_continuous(labels = scales::percent_format(accuracy=1),
breaks = seq(0,1,.05)) +
scale_size_area("Population (millions)", breaks=c(1, 5, 10, 20, 30)) +
labs(title = "",
caption = "\nSome overlapping state abbreviations not shown")
state_stats %>%
inner_join(state_to_region, by = c("abbr" = "state_abb")) %>%
mutate(pop2010_mil = pop2010/10^6,
soc_sec_2 = soc_sec/100) %>%
ggplot(aes(y=med_income, x=soc_sec_2)) +
geom_text(aes(label=abbr), check_overlap=T, size=2) +
geom_point(aes(size=pop2010_mil), alpha=0.5, color="dodgerblue") +
scale_y_continuous(labels = dollar_format())
state_stats %>%
inner_join(state_to_region, by = c("abbr" = "state_abb")) %>%
mutate(pop2010_mil = pop2010/10^6,
soc_sec_2 = soc_sec/100) %>%
ggplot(aes(y=med_income, x=soc_sec_2)) +
geom_text(aes(label=abbr), check_overlap=T, size=2) +
geom_point(aes(size=pop2010_mil), alpha=0.5, color="dodgerblue") +
scale_y_continuous(labels = dollar_format()) +
scale_x_continuous(labels = scales::percent_format(accuracy=1),
breaks = seq(0,1,.05)) +
scale_size_area("Population (millions)", breaks=c(1, 5, 10, 20, 30)) +
labs(title = "",
caption = "\nSome overlapping state abbreviations not shown")
state_stats %>%
inner_join(state_to_region, by = c("abbr" = "state_abb")) %>%
mutate(pop2010_mil = pop2010/10^6,
soc_sec_2 = soc_sec/100) %>%
ggplot(aes(y=med_income, x=soc_sec_2)) +
geom_text(aes(label=abbr), check_overlap=T, size=2) +
geom_point(aes(size=pop2010_mil), alpha=0.5, color="dodgerblue") +
scale_y_continuous(labels = dollar_format()) +
scale_x_continuous(labels = scales::percent_format(accuracy=1),
breaks = seq(0,1,.05)) +
scale_size_area("Population (millions)", breaks=c(1, 5, 10, 20, 30)) +
base_plot_theme() +
labs(title = "US State: Median Income vs % of Individuals Collecting Social Security",
x="% of Individuals Collecting Social Security",
y="Median\nHousehold\nIncome",
caption = "\nSome overlapping state abbreviations not shown")
state_stats %>%
inner_join(state_to_region, by = c("abbr" = "state_abb")) %>%
mutate(pop2010_mil = pop2010/10^6,
soc_sec_2 = soc_sec/100) %>%
ggplot(aes(y=med_income, x=soc_sec_2)) +
geom_text(aes(label=abbr), check_overlap=T, size=2,
font.face="bold") +
geom_point(aes(size=pop2010_mil), alpha=0.5, color="dodgerblue") +
scale_y_continuous(labels = dollar_format()) +
scale_x_continuous(labels = scales::percent_format(accuracy=1),
breaks = seq(0,1,.05)) +
scale_size_area("Population (millions)", breaks=c(1, 5, 10, 20, 30)) +
base_plot_theme() +
labs(title = "US State: Median Income vs
% of Individuals Collecting Social Security",
x="% of Individuals Collecting Social Security",
y="Median\nHousehold\nIncome",
caption = "\nSome overlapping state abbreviations not shown")
state_stats %>%
inner_join(state_to_region, by = c("abbr" = "state_abb")) %>%
mutate(pop2010_mil = pop2010/10^6,
soc_sec_2 = soc_sec/100) %>%
ggplot(aes(y=med_income, x=soc_sec_2)) +
geom_text(aes(label=abbr), check_overlap=T, size=2,
font.face="bold") +
geom_point(aes(size=pop2010_mil), alpha=0.5, color="dodgerblue") +
scale_y_continuous(labels = dollar_format()) +
scale_x_continuous(labels = scales::percent_format(accuracy=1),
breaks = seq(0,1,.02)) +
scale_size_area("Population (millions)", breaks=c(1, 5, 10, 20, 30)) +
base_plot_theme() +
labs(title = "US State: Median Income vs
% of Individuals Collecting Social Security",
x="Percent of Individuals Collecting Social Security",
y="Median\nHousehold\nIncome",
caption = "\nSome overlapping state abbreviations not shown")
?geom_text
state_stats %>%
inner_join(state_to_region, by = c("abbr" = "state_abb")) %>%
mutate(pop2010_mil = pop2010/10^6,
soc_sec_2 = soc_sec/100) %>%
ggplot(aes(y=med_income, x=soc_sec_2)) +
geom_text(aes(label=abbr), check_overlap=T, size=2,
fontface="bold") +
geom_point(aes(size=pop2010_mil), alpha=0.5, color="dodgerblue") +
scale_y_continuous(labels = dollar_format()) +
scale_x_continuous(labels = scales::percent_format(accuracy=1),
breaks = seq(0,1,.02)) +
scale_size_area("Population (millions)", breaks=c(1, 5, 10, 20, 30)) +
base_plot_theme() +
labs(title = "US State: Median Income vs
% of Individuals Collecting Social Security",
x="Percent of Individuals Collecting Social Security",
y="Median\nHousehold\nIncome",
caption = "\nSome overlapping state abbreviations not shown")
?state_stats
state_stats %>%
inner_join(state_to_region, by = c("abbr" = "state_abb")) %>%
mutate(pop2010_mil = pop2010/10^6,
soc_sec_2 = soc_sec/100) %>%
ggplot(aes(y=med_income, x=soc_sec_2)) +
geom_text(aes(label=abbr), check_overlap=T, size=2,
fontface="bold") +
geom_point(aes(size=pop2010_mil), alpha=0.5, color="dodgerblue") +
scale_y_continuous(labels = dollar_format()) +
scale_x_continuous(labels = scales::percent_format(accuracy=1),
breaks = seq(0,1,.02)) +
scale_size_area("Population (millions)", breaks=c(1, 5, 10, 20, 30)) +
base_plot_theme() +
labs(title = "US State: Median Income vs
Percent of Individuals Collecting Social Security",
x="Percent of Individuals Collecting Social Security",
y="Median\nHousehold\nIncome",
caption = "\nSome overlapping state abbreviations not shown")
mpg %>%
tabyl(manufacturer) %>%
ggplot(aes(x=reorder(manufacturer, -percent),
y=percent)) +
geom_col(fill="dodgerblue", alpha=0.8) +
geom_text(aes(label=paste0("n=",n)), vjust=-0.5, size=4) +
base_plot_theme() +
scale_y_continuous(labels = scales::percent_format(accuracy=1),
breaks = seq(0,1,.02),
expand = expansion(mult = c(0, .1))) +
labs(title="Distribution of Cars of by Manufacturer",
y="Percent of\nTotal",
x="Manufacturer")
